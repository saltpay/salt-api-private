openapi: 3.0.0
info:
  title: Partners
  version: '1.0'
  contact:
    name: SaltPay Group
  description: A backend module to manage Partners using the platform.
servers:
  - url: 'http://localhost:3000'
paths:
  /partners:
    post:
      summary: Register Partner
      operationId: registerPartner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
      description: Registers a new partner. For this call all fields are required.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerProperties'
      tags:
        - admin
    get:
      summary: ''
      operationId: getPartners
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerListResponse'
      description: Retrieve a list of all available partners.
      tags:
        - admin
  '/partners/{partnerGuid}':
    parameters:
      - schema:
          type: string
        name: partnerGuid
        in: path
        required: true
    get:
      summary: Get Partner
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
      operationId: getPartner
      description: Get the full details of a Partner.
    patch:
      summary: Update Partner
      operationId: updatePartner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
      description: 'Update the properties of a Partner. When updating the featureConfig field, the entire field must be provided as the entire field will be replaced if it is present.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerProperties'
      tags:
        - admin
  '/partners/{partnerGuid}/feature_config':
    parameters:
      - schema:
          type: string
        name: partnerGuid
        in: path
        required: true
components:
  schemas:
    PartnerProperties:
      title: PartnerProperties
      type: object
      properties:
        name:
          type: string
        pushNotificationApiKey:
          type: string
        emailSenderApiKey:
          type: string
        emailSender:
          type: string
        registerCardAcceptorTemplateId:
          type: string
        registerTerminalTemplateId:
          type: string
        deregisterTerminalTemplateId:
          type: string
        featureConfig:
          $ref: '#/components/schemas/FeatureConfig'
    Partner:
      title: Partner
      type: object
      properties:
        guid:
          type: string
        name:
          type: string
        pushNotificationApiKey:
          type: string
        emailSenderApiKey:
          type: string
        emailSender:
          type: string
        registerCardAcceptorTemplateId:
          type: string
        registerTerminalTemplateId:
          type: string
        deregisterTerminalTemplateId:
          type: string
        featureConfig:
          $ref: '#/components/schemas/FeatureConfig'
      required:
        - guid
        - name
        - pushNotificationApiKey
        - emailSenderApiKey
        - emailSender
        - registerCardAcceptorTemplateId
        - registerTerminalTemplateId
        - deregisterTerminalTemplateId
    PartnerResponse:
      title: PartnerResponse
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        partner:
          $ref: '#/components/schemas/Partner'
      required:
        - code
        - message
    PartnerListResponse:
      title: PartnerListResponse
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        partnerList:
          type: array
          items:
            $ref: '#/components/schemas/Partner'
      required:
        - code
        - message
    FeatureConfig:
      title: FeatureConfig
      type: object
      properties:
        loans:
          type: boolean
        loyalty:
          type: boolean
        payByLink:
          type: boolean
        taxFree:
          type: boolean
        loyaltyFeatureConfig:
          $ref: '#/components/schemas/LoyaltyFeatureConfig'
    LoyaltyFeatureConfig:
      title: LoyaltyFeatureConfig
      type: object
      properties:
        redeem:
          type: boolean
        enrol:
          type: boolean
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: admin
    description: Administer the terminals managed by the service
