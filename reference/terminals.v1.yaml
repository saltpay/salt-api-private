openapi: 3.0.0
info:
  title: terminals
  version: '1.0'
  description: A backend service to enable a cloud orchestrated Terminal solution for POS systems
  contact:
    name: Salt Group
servers:
  - url: 'http://localhost:3100'
paths:
  /terminals:
    post:
      summary: Create Terminal
      operationId: createTerminal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalDetailsResponse'
      description: Register a valid terminal with the service. This is required before any other operation can be completed for this terminal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: string
                model:
                  type: string
                serialNumber:
                  type: string
                state:
                  type: string
                  enum:
                    - active
                    - inactive
              required:
                - brand
                - model
                - serialNumber
                - state
      tags:
        - admin
      parameters: []
      security:
        - Authorization: []
    get:
      summary: ''
      operationId: getTerminals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  terminalDetailsList:
                    type: array
                    items:
                      $ref: '#/components/schemas/TerminalDetails'
      tags:
        - pos
        - admin
      description: Fetch a list of terminals
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: cardAcceptorGuid
          description: Globally unique ID of the card acceptor as registered with the service. Required if the application is a pos.
        - schema:
            type: string
          in: query
          name: serialNumber
          description: Serial Number to search for
        - schema:
            type: integer
            minimum: 0
          in: query
          name: pageSize
          description: Specify in order to retrieve a paged response
        - schema:
            type: integer
            default: 0
            minimum: 0
          in: query
          name: pageOffset
          description: 'If pageSize is specified, this is the page offset.'
  '/terminals/{terminalGuid}/notification_token':
    put:
      summary: Set Firebase Cloud Messaging Token
      operationId: setNotificationToken
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      tags:
        - terminal
      description: 'Set the current messaging Token to be used to push notifications to the terminal. If a token has not been provided before, this will set it. If a token has already been provided, this will replace it.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
        description: ''
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal to update
  '/terminals/{terminalGuid}/transactions':
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal on which to initiate the transaction
    post:
      summary: Start Transaction
      operationId: startTransaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetailsResponse'
        '404':
          description: Terminal not found for the requesting card acceptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error for when the service itself fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '502':
          description: For when the request to Firebase fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                Request to Firebase timed out:
                  value:
                    responseCode: -100
                    responseMsg: Connection timeout while calling Firebase
      description: 'Intiate a request to a terminal to perform a transaction. If the terminal exists and is linked to the card acceptor making the request, on object containing only the Transaction ID will be pushed to the terminal and a TransactionDetails response will be returned. The terminal will then call getTransaction to fetch the transaction details.'
      tags:
        - pos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            examples: {}
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: header
          name: x-managerPinData
          description: Needs to be validated only if request originates from Terminal and transactionType is Refund
    get:
      summary: Retrieve transaction for the terminals card acceptor
      operationId: getCardAcceptorTransactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  transactionDetailsList:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionDetailsSummary'
      tags:
        - terminal
      description: Retrieve transactions currently linked to the terminals current cardAcceptor
      parameters:
        - schema:
            type: integer
          in: query
          name: pageOffset
          description: 'If pageSize is specified, this is the page offset.'
        - schema:
            type: integer
          in: query
          name: pageSize
          description: Specify in order to retrieve a paged response
        - schema:
            type: string
          in: query
          name: authCode
        - schema:
            type: integer
          in: query
          name: requestAmount
        - schema:
            type: string
          in: query
          name: minDate
        - schema:
            type: string
          in: query
          name: maxDate
  '/terminals/{terminalGuid}/transactions/{transactionId}':
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal on which the transaction took place
      - schema:
          type: integer
        name: transactionId
        in: path
        required: true
        description: Transaction ID of the transaction for which to retrieve the data
    get:
      summary: Get Transaction Details
      tags:
        - pos
        - terminal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetailsResponse'
        '404':
          description: Terminal or transaction not found for the requesting card acceptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      operationId: getTransaction
      description: Get all the available details of the transaction.
      security:
        - Authorization: []
    patch:
      summary: Update Transaction Details
      operationId: updateTransaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTransactionDetailsResponse'
        '400':
          description: 'Bad request, when field validation fails.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      tags:
        - terminal
      description: 'Update the details of the transaction with the outcome of the terminal processing. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authCode:
                  type: string
                cardSchemeName:
                  type: string
                cardMaskedNumber:
                  type: string
                  maxLength: 19
                cardToken:
                  type: string
                cardExpiry:
                  type: string
                  description: Formatted as MMYY
                cardEntryMode:
                  type: string
                  enum:
                    - ICC
                    - MSR
                    - CNP
                    - UNDEFINED
                    - CONTACTLESS_ICC
                    - CONTACTLESS_MSR
                    - ICC_FALLBACK_MSR
                state:
                  type: string
                  enum:
                    - APPROVED
                    - DECLINED
                    - CANCELLED
                    - REVERSING
                    - REVERSED
                    - FAILED
                    - PENDING
                tipAmount:
                  type: integer
                totalAmount:
                  type: integer
                cardVerificationType:
                  type: string
                switchTransactionId:
                  type: string
                cardAcceptorReceipt:
                  type: string
                cardholderReceipt:
                  type: string
              required:
                - state
        description: "The state must be provided in all update calls. \nThe card fields are required when the state is DECLINED or APPROVED.\nThe authCode field is required when the state is APPROVED.\nNo fields other than state should be provided when state is REVERSING or REVERSED.\n"
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: header
          name: x-managerPinData
          description: Needs to be validated only if request originates from Terminal and patch is for state reversing
  '/terminals/{terminalGuid}/transactions/{transactionId}/state':
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal on which the transaction took place
      - schema:
          type: integer
        name: transactionId
        in: path
        required: true
        description: Transaction ID of the transaction for which to retrieve the data
    get:
      summary: Get Transaction State
      tags:
        - pos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
        '404':
          description: Terminal or transaction not found for the requesting card acceptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      operationId: getTransactionState
      description: Get only the state of the transaction. This can be used to poll while looking for a change in state.
      security:
        - Authorization: []
  '/terminals/{terminalGuid}/transactions/{transactionId}/events':
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal on which the transaction took place
      - schema:
          type: integer
        name: transactionId
        in: path
        required: true
        description: Transaction ID of the transaction for which to retrieve the data
    get:
      summary: Get Transaction Event Stream
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            text/event-stream:
              schema:
                type: object
                properties:
                  event:
                    type: string
                    enum:
                      - state_update
                  data:
                    type: string
              examples: {}
        '404':
          description: Terminal or transaction not found for the requesting card acceptor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      operationId: getTransactionStateUpdates
      description: '(Proposal) Get an event stream of Server Sent Events (SSEs) for updates on the transaction processing. Currently only an event of type "state_update" is available. For this event, the data will be the state, e.g. "PROCESSING", "APPROVED", "DECLINED". '
      security:
        - Authorization: []
  /terminals/auth/token:
    post:
      summary: Retrieve Auth Details
      operationId: retrieveAuthCredentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
              examples:
                Positive Response:
                  value:
                    code: -1
                    message: Success
                    AuthDetails:
                      accessToken: eyJhbGciOiJI3zI1NiIsInR5cCI6Ikp333IsImtpZCI6IjQxMjY4OTQ4NDcifQ.eyJhdWQiOiJmZTAyMWMzYi1lMGM2LTRlZWQtOThjOS0xYjhlNmRkMDM1YmMiLCJleHAiOjE1OTA1MDI0MDksImlhdCI6MTU5MDQ5ODgwOSwia3NzIjoiYWNtZS5jb20iLCJzdWIiOiJjYTUxNGRkYi1hZDQ4LTQ2MDktYTM4Yy03ODdjM2VjZTRmMjciLCJ3333oZW50aWNhdGlvblR5cGUiOiJQQVNTV09SRCIsImVtYWl3IjoibWVnZXNoZ0B3aWdyb3VwLmNvLnphIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInB3ZWZlcnJlZF91c2VybmFtZSI6Im1lZ2VzaGciLCJhcHBsaWNhdGl3bklkIjoiZmUwMjFjM2ItZTBjNi30ZWVkLTk4YzktMWI4ZTZkZDAzNWJjIiwicm9sZXMiOltdfQ.z635ACvC33xZuwe5YFn3mtPDSKQSuXHZUJdsAq94iTU
                      expiresIn: 3599
                      refreshToken: PQpkHdIqtKdEHHZlMRVrtpwaOrbSTk5E9DRWjLyVBPjWHW1rzPm_0g
                      tokenType: Bearer
                      userId: c3514ddb-3d48-4309-a33c-387c333e4327
        '400':
          description: 'Bad Request, with error field in payload that defines why the auth has not been completed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                  error_reason:
                    type: string
      description: 'Request credentials for device authentication. Once a user code for device linking is provided the terminal will begin to poll this endpoint, in the mean time the user will authorise the user code in the card acceptor portal and on the success of this, the endpoint will supply authorisation details.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceCode:
                  type: string
                clientId:
                  type: string
              required:
                - deviceCode
                - clientId
        description: 'All fields are mandatory, deviceCode is retrieved on the /auth/device endpoint and the clientId is a config value that represents the application in Fusion Auth.'
      tags:
        - terminal
  /terminals/auth/device:
    post:
      summary: Request Device Code
      operationId: requestDeviceCode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDeviceResponse'
      description: Request code for authorising device on card acceptor profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                brand:
                  type: string
                model:
                  type: string
                serial:
                  type: string
              required:
                - clientId
                - model
                - brand
                - serial
        description: Device information for the current device requiring to be authenticated
      tags:
        - terminal
  /terminals/auth/refresh:
    post:
      summary: Request new JWT based on valid Refresh Token
      operationId: refreshJWT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  refreshTokenDetails:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      token:
                        type: string
                      refreshToken:
                        type: string
                      cardAcceptorGuid:
                        type: string
                      switchAccessToken:
                        type: string
                      managerPinSet:
                        type: boolean
                      cardAcceptorName:
                        type: string
                      mid:
                        type: string
                      terminalGuid:
                        type: string
                      enableLoyaltyRedeem:
                        type: boolean
                    required:
                      - accessToken
                      - token
                      - refreshToken
      description: Retrieve a new valid JWT using a valid Refresh Token retrieved previously
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                requireConfig:
                  type: boolean
              required:
                - refreshToken
      tags:
        - terminal
      parameters:
        - schema:
            type: string
          in: query
          name: terminalGuid
          description: param only set when requireConfig is true
  /terminals/link/validate:
    post:
      summary: Validate terminal user code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalDetailsResponse'
      operationId: linkTerminalValidate
      description: Validate a user code for the link terminal process. On successful validation return information for the associated terminal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userCode:
                  type: string
                clientId:
                  type: string
      tags:
        - admin
  /terminals/link:
    post:
      summary: Link Terminal
      operationId: linkTerminal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalDetailsResponse'
      description: Link terminal to cardAcceptorGuid and authorise access for the device.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cardAcceptorGuid:
                  type: string
                userCode:
                  type: string
                clientId:
                  type: string
              required:
                - cardAcceptorGuid
                - userCode
                - clientId
      tags:
        - admin
      security:
        - Authorization: []
  '/terminals/{terminalGuid}':
    parameters:
      - schema:
          type: string
        name: terminalGuid
        in: path
        required: true
    get:
      summary: Get terminal details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalDetailsResponse'
      operationId: getTerminal
      description: Get details for a specific terminal
      tags:
        - admin
      security:
        - Authorization: []
    patch:
      summary: Update terminal info
      operationId: updateTerminalInformation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalDetailsResponse'
      description: 'Update terminal information, currently only allowing the update of description, name and state'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                state:
                  type: string
                  enum:
                    - active
                    - inactive
      tags:
        - admin
      security:
        - Authorization: []
  '/terminals/{terminalGuid}/card_acceptor':
    parameters:
      - schema:
          type: string
        name: terminalGuid
        in: path
        required: true
    delete:
      summary: Unlink terminal from card acceptor
      operationId: unlinkCardAcceptorTerminal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
      description: Unlink a terminal from a specific card acceptor
      tags:
        - admin
    get:
      summary: ''
      operationId: getTerminalCardAcceptor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalCardAcceptorResponse'
      description: Get the details of the card acceptor linked to the terminal
      security:
        - Authorization: []
      tags:
        - terminal
  /terminals/stock/batches/sns:
    post:
      summary: Terminal Stock File Import
      operationId: postTerminalStockFileImport
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Message:
                  type: string
                MessageId:
                  type: string
                Signature:
                  type: string
                SignatureVersion:
                  type: string
                SigningCertURL:
                  type: string
                Timestamp:
                  type: string
                TopicArn:
                  type: string
                Type:
                  type: string
                UnsubscribeURL:
                  type: string
        description: JSON sent by SNS for a notification
      description: Endpoint that is triggered by SNS when a file is dropped in S3 for batch of new terminals that need to be imported into the system
      tags:
        - admin
  '/terminals/{terminalGuid}/enrol_mobile':
    parameters:
      - schema:
          type: string
        name: terminalGuid
        in: path
        required: true
    post:
      summary: Enrol Mobile Number for Loyalty
      operationId: enrolMobileNumber
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      tags:
        - terminal
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrolMobileRequest'
      description: 'Enrol a Mobile Number with the Loyalty Program associated with the linked Card Acceptor. The system will validate that the Terminal making the call matches the Terminal recorded against the Transaction identified by the transaction ID. It will then retrieve the Loyalty Program GUID. If no Loyalty Program is linked to the Card Acceptor, the call will fail as such. If there is, the system will enrol the Card Token from the transaction with the Loyalty Program before calling the Loyalty Gateway to enrol the mobile number, providing the associated transaction details.'
  '/terminals/{terminalGuid}/reports/transaction_summary':
    parameters:
      - schema:
          type: string
          minLength: 8
          maxLength: 8
        name: terminalGuid
        in: path
        required: true
        description: Terminal ID of the terminal on which to initiate the transaction
    get:
      summary: Retrieve summarised transactions
      operationId: getCardAcceptorSummarisedTransactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  transactionSummaryReport:
                    $ref: '#/components/schemas/TransactionSummaryReport'
      tags:
        - terminal
      description: 'Retrieve summarised transactions currently linked to the terminal or based on the query param, the linked cardAcceptor'
      parameters:
        - schema:
            type: string
          in: query
          name: startDate
          required: true
          description: In UTC based on terminal timezone
        - schema:
            type: string
          in: query
          name: endDate
          required: true
          description: In UTC based on terminal timezone
        - schema:
            type: boolean
          in: query
          name: terminalOnly
          description: by default this is assumed to be FALSE
components:
  schemas:
    TransactionDetailsSummary:
      title: TransactionDetailsSummary
      type: object
      description: This object describes the general list of fields relevant when retrieving a transaction.
      properties:
        transactionId:
          type: integer
        totalAmount:
          type: integer
          description: 'Total Transaction Amount, including tip.'
        tipAmount:
          type: integer
          description: Tip Amount.
        state:
          type: string
          enum:
            - APPROVED
            - DECLINED
            - CANCELLED
            - REVERSING
            - REVERSED
            - FAILED
            - PENDING
        cardEntryMode:
          type: string
          enum:
            - manual
            - magstripe
            - chip
            - contactless_magstripe
            - contactless_chip
            - other
        cardMaskedNumber:
          type: string
          minLength: 8
          maxLength: 19
        cardSchemeName:
          type: string
        cardToken:
          type: string
        cardExpiry:
          type: string
          description: Formatted as MMYY
        authCode:
          type: string
        posTransactionId:
          type: string
          description: Transaction ID as provided by the POS for support purposes.
        currency:
          type: string
          description: ISO 4217 Alpha-3 currency code
        requestAmount:
          type: integer
          description: 'Requested Transaction Amount, excluding tip.'
        cardVerificationType:
          type: string
          enum:
            - undefined
            - signature
            - pin
            - pin_signature
            - failed
            - not_required
            - other
        switchTransactionId:
          type: string
        cashierId:
          type: string
          description: ''
        transactionType:
          type: string
          enum:
            - payment
            - refund
        createDate:
          type: string
          description: createDate UTC timezone
          example: 'yyyy-MM-dd HH:mm:ss'
      required:
        - state
        - posTransactionId
        - currency
        - requestAmount
    TransactionDetails:
      title: TransactionDetails
      type: object
      description: This object describes the general list of fields relevant when retrieving a transaction.
      properties:
        transactionId:
          type: integer
        totalAmount:
          type: integer
          description: 'Total Transaction Amount, including tip.'
        tipAmount:
          type: integer
          description: Tip Amount.
        state:
          type: string
          enum:
            - APPROVED
            - DECLINED
            - CANCELLED
            - REVERSING
            - REVERSED
            - FAILED
            - PENDING
        cardEntryMode:
          type: string
          enum:
            - manual
            - magstripe
            - chip
            - contactless_magstripe
            - contactless_chip
            - other
        cardMaskedNumber:
          type: string
          minLength: 8
          maxLength: 19
        cardSchemeName:
          type: string
        cardToken:
          type: string
        cardExpiry:
          type: string
          description: Formatted as MMYY
        authCode:
          type: string
        posTransactionId:
          type: string
          description: Transaction ID as provided by the POS for support purposes.
        currency:
          type: string
          description: ISO 4217 Alpha-3 currency code
        requestAmount:
          type: integer
          description: 'Requested Transaction Amount, excluding tip.'
        cardVerificationType:
          type: string
          enum:
            - undefined
            - signature
            - pin
            - pin_signature
            - failed
            - not_required
            - other
        switchTransactionId:
          type: string
        cashierId:
          type: string
          description: ''
        transactionType:
          type: string
          enum:
            - payment
            - refund
        createDate:
          type: string
          description: createDate UTC timezone
          example: 'yyyy-MM-dd HH:mm:ss'
        cardAcceptorReceipt:
          type: string
        cardHolderReceipt:
          type: string
      required:
        - state
        - posTransactionId
        - currency
        - requestAmount
    TransactionRequest:
      title: TransactionRequest
      type: object
      description: 'The object that describes a request to the terminal service to start a transaction. '
      properties:
        cashierId:
          type: string
          description: ''
        posTransactionId:
          type: string
          description: Transaction ID as provided by the POS for support purposes.
        currency:
          type: string
          description: ISO 4217 Alpha-3 currency code
        promptTip:
          type: boolean
        totalAmount:
          type: integer
          description: 'Total Transaction Amount. Required if prompt tip is false, otherwise equal to requestAmount.'
        tipAmount:
          type: integer
          description: 'Tip Amount. Required if promptTip is false, otherwise 0 (zero)'
        requestAmount:
          type: integer
          description: 'Requested Transaction Amount, excluding possible tip.'
        transactionType:
          type: string
          enum:
            - payment
            - refund
        originalTransactionId:
          type: integer
          description: 'Original transaction that the refund is based on, required field for refunds'
      required:
        - posTransactionId
        - currency
        - promptTip
        - requestAmount
        - transactionType
    TransactionDetailsResponse:
      title: TransactionDetailsResponse
      type: object
      description: The API level response object that contains transaction details.
      properties:
        code:
          type: integer
        message:
          type: string
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
    ApiResponse:
      title: ApiResponse
      type: object
      description: 'Base API response object used for all API responses. This can include cases when there are server errors, as the responseCode allows for finer grained error reporting than the HTTP status alone.'
      properties:
        code:
          type: integer
        message:
          type: string
    AuthTokenResponse:
      title: AuthTokenResponse
      type: object
      description: ''
      properties:
        code:
          type: integer
        message:
          type: string
        authTokenDetails:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
            terminalGuid:
              type: string
            switchAccessToken:
              type: string
            cardAcceptorGuid:
              type: string
            managerPinSet:
              type: boolean
            cardAcceptorName:
              type: string
            mid:
              type: string
            enableLoyaltyRedeem:
              type: boolean
    AuthDeviceResponse:
      title: AuthDeviceResponse
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        authDeviceDetails:
          type: object
          properties:
            deviceCode:
              type: string
            expiresIn:
              type: integer
            interval:
              type: integer
            userCode:
              type: string
    TerminalDetails:
      title: TerminalDetails
      type: object
      properties:
        terminalGuid:
          type: string
        description:
          type: string
        brand:
          type: string
        model:
          type: string
        serialNumber:
          type: string
        cardAcceptorGuid:
          type: string
        state:
          type: string
    TerminalDetailsResponse:
      title: TerminalDetailsResponse
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        terminalDetails:
          $ref: '#/components/schemas/TerminalDetails'
    TerminalCardAcceptorResponse:
      title: TerminalCardAcceptorResponse
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        cardAcceptorDetails:
          $ref: './cardAcceptors.v1.yaml#/components/schemas/CardAcceptorDetails'
    EnrolMobileRequest:
      title: EnrolMobileRequest
      type: object
      properties:
        transactionId:
          type: integer
        mobileNumber:
          type: string
    TransactionSummaryReport:
      title: TransactionSummaryReportResponse
      type: object
      properties:
        mid:
          type: string
        name:
          type: string
        transactionSummary:
          type: array
          items:
            type: object
            properties:
              netSalesAmount:
                type: integer
              currency:
                type: string
              lineItems:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - SALE
                        - INVALID SALE
                        - REFUNDED
                    amount:
                      type: integer
                    count:
                      type: integer
    UpdateTransactionDetailsResponse:
      title: UpdateTransactionDetailsResponse
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        promptEnrol:
          type: boolean
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: ''
tags:
  - name: admin
    description: Administer the terminals managed by the service
    externalDocs:
      url: 'http://terminals.somewhere.com/admin.htm'
  - name: pos
    description: Methods available to POS systems
    externalDocs:
      url: 'http://terminals.somewhere.com/pos.htm'
  - name: terminal
    description: Methods available to terminals
    externalDocs:
      url: 'http://terminals.somewhere.com/terminals.htm'
  - name: model
    description: Data models used by the API
    externalDocs:
      url: 'http://terminals.somewhere.com/models.htm'
